C51 COMPILER V7.01  MENU                                                                   07/12/2006 14:11:31 PAGE 1   


C51 COMPILER V7.01, COMPILATION OF MODULE MENU
OBJECT MODULE PLACED IN .\bin\menu.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE src\menu.c LARGE BROWSE INTVECTOR(0X8000) DEBUG OBJECTEXTEND SYMBOLS PRINT(
                    -.\lst\menu.lst) OBJECT(.\bin\menu.obj)

stmt level    source

   1          /* Menu System */
   2          #include <reg515.h>
   3          #include <stdio.h>
   4          #include <stdlib.h>
   5          #include <string.h>
   6          #include <intrins.h>
   7          #include "timer.h"
   8          #include "lcddrv.h"
   9          #include "kbddrv.h"
  10          #include "menu.h"
  11          #include "applications.h"
  12          #include "relays.h"
  13          
  14          const menu_t main_menu[];
  15          
  16          static bit menu_changed = 1;
  17          
  18          /* Declarations of functions used by menu */
  19          void leave_menu();
  20          void show_config();
  21          void set_clock();
  22          
  23          const menu_t serv_menu[] = {
  24              {"Relay 1 ON    ",   relay1_on,   NULL},
  25              {"Relay 1 OFF   ",   relay1_off,  NULL},
  26              {"Relay 2 ON    ",   relay2_on,   NULL},
  27              {"Relay 2 OFF   ",   relay2_off,  NULL},
  28              {"Relay 3 ON    ",   relay3_on,   NULL},
  29              {"Relay 3 OFF   ",   relay3_off,  NULL},
  30              {"Relay 4 ON    ",   relay4_on,   NULL},
  31              {"Relay 4 OFF   ",   relay4_off,  NULL},
  32              {"Relay 5 ON    ",   relay5_on,   NULL},
  33              {"Relay 5 OFF   ",   relay5_off,  NULL},
  34              {"All Relays OFF",   relays_off,  NULL},
  35              {"Exit          ",   NULL,   main_menu},
  36              {NULL,               NULL,   NULL},
  37          };
  38          
  39          const menu_t sub_menu[] = {
  40              {"Engine delay  ",   NULL,   NULL}, /* Delay time before engine will be started */
  41              {"Start time    ",   NULL,   NULL}, /* Time how long start signal have to be hold */
  42              {"Start delay   ",   NULL,   NULL}, /* Delay between two start signals in case of failed start */
  43              {"Return delay  ",   NULL,   NULL}, /* Delay time before normal powering will be returned */
  44              {"Date/Time     ",   set_clock,   NULL},
  45              {"Show current  ",   show_config,   NULL},
  46              {"Factory Reset ",   NULL,   NULL},
  47              {"Exit          ",   NULL,   main_menu},
  48              {NULL,               NULL,   NULL},
  49          };
  50          
  51          const menu_t main_menu[] = {
  52              {"Status        ",   NULL,   NULL},
  53              {"Applications  ",   NULL,   NULL},
  54              {"Service/Tests ",   NULL,   serv_menu},
C51 COMPILER V7.01  MENU                                                                   07/12/2006 14:11:31 PAGE 2   

  55              {"Configure     ",   NULL,   sub_menu},
  56              {"Leave menu    ",   leave_menu,   NULL},
  57              {NULL,               NULL,   NULL},
  58          };
  59          
  60          /*static*/ menu_keys_t menu_curr_key = INITIAL;
  61          static char menu_pos = 0;
  62          static menu_t *menu_current = main_menu;
  63          
  64          /* Implementations of functions used by menu */
  65          void leave_menu()
  66          {
  67   1          lcd_clear();
  68   1          app_current = A_NOTHING;
  69   1          menu_curr_key = NONE;
  70   1          menu_changed = 1;
  71   1      }
  72          
  73          void show_config()
  74          {
  75   1          lcd_clear();
  76   1          app_current = A_SHOWCONF;
  77   1          menu_curr_key = NONE;
  78   1          menu_changed = 1;
  79   1      }
  80          
  81          void set_clock()
  82          {
  83   1          lcd_clear();
  84   1          app_current = A_DATETIMESET;
  85   1          menu_curr_key = NONE;
  86   1          menu_changed = 1;
  87   1      }
  88          
  89          /* Functions used by menu subsystem */
  90          void menu_show(unsigned char pos)
  91          {
  92   1          if(pos > 0) lcd_putstring(2, 2, menu_current[pos-1].name);
  93   1          else lcd_putstring(2, 2, "                  ");
  94   1          
  95   1              lcd_putstring(2, 1, menu_current[pos].name);
  96   1          lcd_putstring(0, 1, "~");
  97   1          
  98   1          if(menu_current[pos+1].name) lcd_putstring(2, 3, menu_current[pos+1].name);
  99   1          else lcd_putstring(2, 3, "                  ");
 100   1          
 101   1          return;
 102   1      }
 103          
 104          menu_keys_t menu_check_keys()
 105          {
 106   1          menu_keys_t detected_key = NONE;
 107   1          if(kbd_hit())
 108   1          {
 109   2              switch(kbd_get_key())
 110   2              {
 111   3                  case K_ESCAPE:
 112   3                  case K_ESCAPE_LONG:
 113   3                      detected_key = ESCAPE;
 114   3                      break;
 115   3                  case K_UP:
 116   3                  case K_UP_LONG:
C51 COMPILER V7.01  MENU                                                                   07/12/2006 14:11:31 PAGE 3   

 117   3                      detected_key = UP;
 118   3                      break;
 119   3                  case K_DOWN:
 120   3                  case K_DOWN_LONG:
 121   3                      detected_key = DOWN;
 122   3                      break;
 123   3                  case K_ENTER:
 124   3                  case K_ENTER_LONG:
 125   3                      detected_key = ENTER;
 126   3                      break;
 127   3                  default:
 128   3                      break;
 129   3              }
 130   2          }
 131   1          return detected_key;
 132   1      }
 133          
 134          void menu_statemachine()
 135          {
 136   1          //if(NONE != menu_curr_key) menu_show(menu_pos);
 137   1          if(menu_changed) 
 138   1          {
 139   2              menu_show(menu_pos);
 140   2              menu_changed = 0;
 141   2          }
 142   1          
 143   1          menu_curr_key = menu_check_keys();
 144   1      
 145   1          switch (menu_curr_key) {
 146   2              case DOWN:
 147   2                  menu_pos++;
 148   2                  if(NULL == menu_current[menu_pos].name) menu_pos--;
 149   2                  menu_changed = 1;
 150   2                  break;
 151   2              case UP:
 152   2                  if(menu_pos > 0) menu_pos--;
 153   2                  menu_changed = 1;
 154   2                  break;
 155   2              case ENTER:
 156   2                  /* Call function associated with that menu position */
 157   2                  if(NULL != menu_current[menu_pos].func) {
 158   3                      menu_current[menu_pos].func();                
 159   3                  }
 160   2                  /* Enter Submenu */
 161   2                  if(NULL != menu_current[menu_pos].submenu) {
 162   3                      menu_current = (menu_t*)menu_current[menu_pos].submenu;
 163   3                      menu_pos = 0;
 164   3                      menu_changed = 1;
 165   3                  }
 166   2                  break;
 167   2              case ESCAPE:
 168   2                  menu_changed = 1;
 169   2                  break;
 170   2              case NONE:
 171   2              default:
 172   2                  break;
 173   2          }
 174   1      
 175   1          
 176   1          return;
 177   1      }
 178          
C51 COMPILER V7.01  MENU                                                                   07/12/2006 14:11:31 PAGE 4   

 179          
C51 COMPILER V7.01  MENU                                                                   07/12/2006 14:11:31 PAGE 5   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


app_current_t. . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
ENTER. . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
kbd_get_key. . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
menu_curr_key. . . . . . . . . . . . .  PUBLIC   XDATA  U_CHAR   0000H  1
P4 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
T_RELAYS . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
T_KEYBOARD . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
T_LED. . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
A_SHOWCONF . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
menu_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  9
  name . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
  func . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0003H  3
  submenu. . . . . . . . . . . . . . .  MEMBER   -----  PTR      0006H  3
INITIAL. . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
lcd_state_t. . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
relay1_on. . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
relay2_on. . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
relay3_on. . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
relay4_on. . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
relay5_on. . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
T_CURSOR . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
menu_statemachine. . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
PUTCHAR. . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
show_config. . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
lcd_clear. . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
IDLE . . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
menu_current . . . . . . . . . . . . .  STATIC   XDATA  PTR      0001H  3
T_CLOCK. . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
UP . . . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
timer_id_t . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
leave_menu . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
POWER_ENGINE . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ENGINE_START . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
NO_OF_APPS . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
app_current. . . . . . . . . . . . . .  EXTERN   XDATA  U_CHAR   -----  1
menu_keys_t. . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
K_ENTER. . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
T_LIGHT. . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ENGINE_WAITING . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
kbd_key_code_t . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
relays_off . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
NONE . . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
K_EXTRA. . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ESCAPE . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
WAIT . . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
menu_check_keys. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  detected_key . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
DOWN . . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_menu_show . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  pos. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
POWER_NORMAL . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
A_NOTHING. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
set_clock. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
ENGINE_WORKING . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
K_ENTER_LONG . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
main_menu. . . . . . . . . . . . . . .  PUBLIC   XDATA  ARRAY    0004H  54
C51 COMPILER V7.01  MENU                                                                   07/12/2006 14:11:31 PAGE 6   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


NO_OF_TIMERS . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
T_DISPLAY. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
POWER_SWITCHED . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
K_UP . . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
A_MENU . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
kbd_hit. . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
serv_menu. . . . . . . . . . . . . . .  PUBLIC   XDATA  ARRAY    003AH  117
POWER_RETURNED . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
K_NONE . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
K_ESCAPE . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
A_DATETIMESET. . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ENGINE_STOP. . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
K_UP_LONG. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
RETURN . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
sub_menu . . . . . . . . . . . . . . .  PUBLIC   XDATA  ARRAY    00AFH  81
K_DOWN . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
menu_changed . . . . . . . . . . . . .  STATIC   DATA   BIT      0000H  1
POWER_UPS. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
T_BEEPER . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
NEXTLINE . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
T_MENU . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
T_WAIT . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
menu_pos . . . . . . . . . . . . . . .  STATIC   XDATA  CHAR     0100H  1
A_CHARHELP . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_lcd_putstring . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
wchar_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
relays_state_t . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
relay1_off . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
relay2_off . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
relay3_off . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
K_ESCAPE_LONG. . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
relay4_off . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
relay5_off . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
T_SECOND . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
K_DOWN_LONG. . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ENGINE_CHECK . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    559    ----
   CONSTANT SIZE    =    381    ----
   XDATA SIZE       =    257       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
